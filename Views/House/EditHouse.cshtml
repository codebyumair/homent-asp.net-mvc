@model Homent.Models.tblHouse

@{
    ViewBag.Title = "EditHouse";
}

@Html.Partial("_Navbar")

<div class="container-fluid mt-5">
    <div class="container mt-5 bg-white rounded p-3 shadow-sm">
        <h2 class="text-primary text-center mb-4 edit-title">
            <i class="material-icons-round text-primary">
                edit_note
            </i>   Edit house
        </h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal edit-form">
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                @Html.HiddenFor(model => model.HouseID)

                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerID, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-12 col-md-12 col-sm-12">
                        @Html.EditorFor(model => model.OwnerID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HouseNo, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.HouseNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HouseNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HouseName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.HouseName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HouseName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Room, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Room, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Room, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FloorArea, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FloorArea, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FloorArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-none">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-none">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ImagePath, new
                        {
                            htmlAttributes = new { @class = "form-control", @readonly = "readonly" }
                })
                        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rent, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Rent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deposit, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Deposit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deposit, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 d-flex gap-3">
                        <input type="submit" value="Save" class="btn btn-primary edit-btn" />
                        <a href="/Account/Owner" class="btn btn-outline-success">Cancel</a>
                    </div>
                </div>
            </div>
        }


    </div>
</div>
